<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 扫描全包的注解 不包括controller -->
	<context:component-scan base-package="com.demo">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
		<!-- Spring的配置文件，这里主要配置和业务逻辑 -->
		<!-- 数据源，事务控制 -->
		<context:property-placeholder location="classpath:dbconfig.properties"/>
		<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
			<property name="driverClass" value="${jdbc.driverClass}"></property>
			<property name="user" value="${jdbc.user}"></property>
			<property name="password" value="${jdbc.password}"></property>
		</bean>
		
		<!-- =================配置与MyBatis的整合 ===============-->
		<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 指定MyBatis全局配置文件的位置 -->
			<property name="configLocation" value="classpath:mybatis-config.xml"></property>
			<property name="dataSource" ref="pooledDataSource"></property>
			<property name="mapperLocations" value="classpath:mapper/*.xml"></property><!-- 指定映射文件位置 -->
		</bean>
		
		<!-- 配置扫描器，将MyBatis接口的实现加入到ioc容器中 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有的dao接口的实现，加入到ioc容器 -->
			<property name="basePackage" value="com.demo.dao"></property>
		</bean>
		<!-- ====================================================== -->
		
		<!-- 配置一个可以执行批量的sqlsession -->
		<bean  id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
			<constructor-arg name="executorType" value="BATCH"></constructor-arg>
		</bean>
		
		<!-- ================事物控制============ -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<!-- 控制数据源 -->
			<property name="dataSource" ref="pooledDataSource"></property>
		</bean>
		<!-- 配置事务 -->
		<aop:config>
		<!-- 切入点 -->
			<aop:pointcut expression="execution(* com.demo.service..*(..))" id="txPoint"/>
			<!-- 配置事务增强 -->
			<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
		</aop:config>
		<!-- 配置事务增强 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<!--切入的所有的方法都是事务方法 -->
				<tx:method name="*"/>
				<!-- 以get开始的所有方法 -->
				<tx:method name="get" read-only="true"/>
			</tx:attributes>
		</tx:advice>
		
		<!-- Spring配置文件的核心点(数据源，与mybatis整合，事物控制) -->
		
		
</beans>
